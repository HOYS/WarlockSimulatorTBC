@using Shared.Classes.UI

<div id="talents-container">
    <div id="preset-talent-buttons">
        <button class="preset-talent-button" @onclick="@(() => PresetTalentClickHandler("afflictionUa"))">Affli/UA</button>
        <button class="preset-talent-button" @onclick="@(() => PresetTalentClickHandler("afflictionRuin"))">Affli/Ruin</button>
        <button class="preset-talent-button" @onclick="@(() => PresetTalentClickHandler("destruction"))">Destruction</button>
        <button class="preset-talent-button" @onclick="@(() => PresetTalentClickHandler("destructionNightfall"))">Destro/Nightfall</button>
        <button class="preset-talent-button" @onclick="@(() => PresetTalentClickHandler("demonology"))">Demonology/Felguard</button>
        <button class="preset-talent-button" @onclick="@(() => PresetTalentClickHandler("demonologyRuin"))">Demonology/Ruin</button>
    </div>
    <section id="talents-section">
        @foreach (var talentTree in TalentTree.trees)
        {
            <div class="talent-tree-div">
                <table id="talent-table-@talentTree.Key" class="talent-tree-table" background="img/talent_tree_background_@(talentTree.Key).jpg">
                    <tbody>
                        @foreach (var talentRow in talentTree.Value)
				        {
                            int column = 0;
                            <tr>
                                @foreach (var talent in talentRow.Value)
					            {
                                    column++;
                                    while (talent.Value.column > column)
						            {
                                        <td></td>
                                        column++;
                                    }
                                    <td>
                                        <div id="@talent.Key" class="talent-icon" data-points="@talent.Value.pointsTaken" @onmouseup="@((mouseArgs) => TalentClickHandler(mouseArgs, talent.Key))" oncontextmenu="return false;" @onclick:preventDefault="true">
                                            <a href="https://tbc.wowhead.com/spell=@talent.Value.rankIds[0]">
                                                <img src="img/@talent.Value.iconName" />
                                                <span id="@talent.Key-point-amount" class="talent-point-amount" data-points="@talent.Value.pointsTaken" data-max-points="@(talent.Value.pointsTaken == talent.Value.rankIds.Length ? "true" : "false")">@talent.Value.pointsTaken</span>
                                            </a>
                                        </div>
                                    </td>
					            }
                            </tr>
				        }
                    </tbody>
                </table>
            </div>
		}
    </section>
</div>

@code {
    private void TalentClickHandler(MouseEventArgs mouseArgs, string talentName)
    {
        if (mouseArgs.Button != 0 && mouseArgs.Button != 2)
        {
            return;
        }

        //todo: optimize this
        foreach (var talentTree in TalentTree.trees)
        {
            foreach (var talentRow in talentTree.Value)
            {
                foreach (var talent in talentRow.Value)
                {
                    if (talent.Key == talentName)
                    {
                        if (mouseArgs.Button == 0 && talent.Value.pointsTaken < talent.Value.rankIds.Length)
						{
                            talent.Value.pointsTaken++;
						}
                        else if (mouseArgs.Button == 2 && talent.Value.pointsTaken > 0)
						{
                            talent.Value.pointsTaken--;
						}
                    }
                }
            }
        }
    }

    // todo: optimize this - low priority but it's so inefficient that it hurts to even look at it.
    private void PresetTalentClickHandler(string presetTalentName)
	{
        foreach (var talentTree in TalentTree.trees)
		{
            foreach (var talentTreeRow in talentTree.Value)
			{
                foreach (var talent in talentTreeRow.Value)
				{
                    talent.Value.pointsTaken = 0;
                    foreach (var presetTalentTree in PresetTalents.presetTalents)
					{
                        if (presetTalentTree.Key == presetTalentName)
						{
                            foreach (var presetTalent in presetTalentTree.Value)
							{
                                if (presetTalent.Key == talent.Key)
								{
                                    talent.Value.pointsTaken = presetTalent.Value;
								}
							}
						}
					}
				}
			}
		}
	}
}