@using ViewModels.Interfaces;
@using Shared.Classes; 

@inject ISidebarViewModel SidebarVM;

<SidebarCharacterStats />

<ul id="sidebar-sets">
    <li><h3>Set Bonuses</h3></li>
    <li class="sidebar-set-bonus">Plagueheart Raiment (4)</li>
</ul>

<div id="sidebar-simulation-selection">
    <div id="sim-result-dps-div">
        <p><span id="avg-dps">@SidebarVM.AvgDps</span><span> DPS</span></p>
        <p>Min: <span id="min-dps">@SidebarVM.MinDps</span> Max: <span id="max-dps">@SidebarVM.MaxDps</span></p>
    </div>
    <div class='btn' @onclick="@(() => SidebarVM.SimulateDps(SimulationType.Normal))" style="background: @(SidebarVM.SimProgress > 0 ? ("linear-gradient(to right, #9482C9 " + SidebarVM.SimProgress + "%, transparent " + SidebarVM.SimProgress + "%)") : "")">@SidebarVM.SimulateButtonText</div>
    <div class='btn'@onclick="@(() => SidebarVM.SimulateDps(SimulationType.AllItems))" style="background: @(SidebarVM.MultiSimProgress > 0 ? ("linear-gradient(to right, #9482C9 " + SidebarVM.MultiSimProgress + "%, transparent " + SidebarVM.MultiSimProgress + "%)") : "")">@SidebarVM.MultiSimButtonText</div>
    <div class='btn'>Stat Weights</div>
    <div class='btn'>Show Combat Log</div>
    <p id="sim-length-result">@(SidebarVM.SimulationDuration != null ? SidebarVM.SimulationDuration + "s" : "")</p>
    <p id="guybrush-note">This sim was heavily inspired by <a target="_blank" href='https://guybrushgit.github.io/WarriorSim/'>Guybrush's 1.13 Warrior Simulator</a></p>
    <p id="paypal-note"><a href="https://www.paypal.com/paypalme/kristoferhh" target="_blank">Support me via PayPal</a></p>
</div>

@code {
    [Parameter] public EventCallback RefreshItemTable { get; set; } // probably remove

    protected override async Task OnInitializedAsync() => await SidebarVM.InitializeViewModel();
}